<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.go.together.Mapper.ProductMapper">

  <insert id="insertProduct">
        <selectKey keyProperty="productNumber" order="BEFORE" resultType="long">
            SELECT SEQ_PRODUCT.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_PRODUCT (PRODUCT_NUMBER,CATEGORY_MAJOR_CODE, CATEGORY_MINOR_CODE, PRODUCT_NAME, PRODUCT_PRICE, DISCOUNT_RATE,
                                 PRODUCT_EXPLANATION,PRODUCT_EXPLANATION1,PRODUCT_EXPLANATION2, PRODUCT_QUANTITY,PRODUCT_REGISTER_DATE,USER_ID,USER_NUMBER)
        VALUES (#{productNumber}, #{categoryMajorCode},#{categoryMinorCode}, #{productName}, #{productPrice}, #{discountRate},
          #{productExplanation}, #{productExplanation1}, #{productExplanation2}, #{productQuantity},SYSDATE,#{userId},#{userNumber})
    </insert>


    <insert id="insertSize">
    INSERT INTO TBL_PRODUCT_SIZE(PRODUCT_NUMBER, PRODUCT_SIZES)
    VALUES (#{productNumber},#{productSizes})
    </insert>

    <insert id="insertColor">
    INSERT INTO TBL_PRODUCT_COLOR(PRODUCT_NUMBER, PRODUCT_COLORS)
    VALUES (#{productNumber},#{productColors})
    </insert>



    <select id="selectProduct" resultType="productVo">
        SELECT P.PRODUCT_NUMBER, P.CATEGORY_MAJOR_CODE, P.CATEGORY_MINOR_CODE, P.PRODUCT_NAME, P.PRODUCT_PRICE,
               P.DISCOUNT_RATE, (P.PRODUCT_PRICE * (1 - P.DISCOUNT_RATE / 100)) AS DISCOUNT_PRICE,
               P.PRODUCT_EXPLANATION, P.PRODUCT_QUANTITY, P.PRODUCT_REGISTER_DATE, P.PRODUCT_EXPLANATION1,
               P.PRODUCT_EXPLANATION2, LISTAGG(PS.PRODUCT_SIZES, ',') WITHIN GROUP (ORDER BY PS.PRODUCT_SIZES) AS PRODUCT_SIZES,
       LISTAGG(PC.PRODUCT_COLORS, ',') WITHIN GROUP (ORDER BY PC.PRODUCT_COLORS) AS PRODUCT_COLORS,
            U.USER_ID, U.USER_NUMBER, F.FILE_UPLOAD_PATH, F.FILE_UUID, F.FILE_NAME
        FROM TBL_PRODUCT P
            JOIN TBL_USER U ON P.USER_NUMBER = U.USER_NUMBER
            JOIN TBL_FILE F ON F.PRODUCT_NUMBER = P.PRODUCT_NUMBER
            JOIN (
            SELECT
            PRODUCT_NUMBER,
            LISTAGG(PRODUCT_SIZES, ',') WITHIN GROUP (ORDER BY PRODUCT_SIZES) AS PRODUCT_SIZES
            FROM  TBL_PRODUCT_SIZE
            GROUP BY PRODUCT_NUMBER
            ) PS ON P.PRODUCT_NUMBER = PS.PRODUCT_NUMBER
            JOIN (
            SELECT
            PRODUCT_NUMBER,
            LISTAGG(PRODUCT_COLORS, ',') WITHIN GROUP (ORDER BY PRODUCT_COLORS) AS PRODUCT_COLORS
            FROM
            TBL_PRODUCT_COLOR
            GROUP BY
            PRODUCT_NUMBER
            ) PC ON P.PRODUCT_NUMBER = PC.PRODUCT_NUMBER
        WHERE P.PRODUCT_NUMBER = #{productNumber}
        GROUP BY P.PRODUCT_NUMBER, P.CATEGORY_MAJOR_CODE, P.CATEGORY_MINOR_CODE, P.PRODUCT_NAME, P.PRODUCT_PRICE,
            P.DISCOUNT_RATE, P.PRODUCT_EXPLANATION, P.PRODUCT_QUANTITY, P.PRODUCT_REGISTER_DATE,
            P.PRODUCT_EXPLANATION1, P.PRODUCT_EXPLANATION2, U.USER_NUMBER, U.USER_ID, F.FILE_UPLOAD_PATH,
            F.FILE_UUID, F.FILE_NAME, F.FILE_NUMBER
    </select>


<!--이게 맞는거야 !!-->
<!--    <select id="selectProduct" resultType="ProductVo">-->
<!--        SELECT-->
<!--            P.PRODUCT_NUMBER,-->
<!--            P.CATEGORY_MAJOR_CODE,-->
<!--            P.CATEGORY_MINOR_CODE,-->
<!--            P.PRODUCT_NAME,-->
<!--            P.PRODUCT_PRICE,-->
<!--            P.DISCOUNT_RATE,-->
<!--            (P.PRODUCT_PRICE * (1 - P.DISCOUNT_RATE / 100)) AS DISCOUNT_PRICE,-->
<!--            P.PRODUCT_EXPLANATION,-->
<!--            P.PRODUCT_QUANTITY,-->
<!--            P.PRODUCT_REGISTER_DATE,-->
<!--            P.PRODUCT_EXPLANATION1,-->
<!--            P.PRODUCT_EXPLANATION2,-->
<!--            PS.PRODUCT_SIZES AS PRODUCT_SIZES,-->
<!--            PC.PRODUCT_COLORS AS PRODUCT_COLORS,-->
<!--            U.USER_ID,-->
<!--            U.USER_NUMBER,-->
<!--            F.FILE_UPLOAD_PATH,-->
<!--            F.FILE_UUID,-->
<!--            F.FILE_NAME-->
<!--        FROM TBL_PRODUCT P-->
<!--                 JOIN TBL_USER U ON P.USER_NUMBER = U.USER_NUMBER-->
<!--                 JOIN TBL_FILE F ON F.PRODUCT_NUMBER = P.PRODUCT_NUMBER-->
<!--                 LEFT JOIN (-->
<!--            SELECT PRODUCT_NUMBER, LISTAGG(PRODUCT_SIZES, ',') WITHIN GROUP (ORDER BY PRODUCT_SIZES) AS PRODUCT_SIZES-->
<!--            FROM TBL_PRODUCT_SIZE-->
<!--            GROUP BY PRODUCT_NUMBER-->
<!--        ) PS ON P.PRODUCT_NUMBER = PS.PRODUCT_NUMBER-->
<!--                 LEFT JOIN (-->
<!--            SELECT PRODUCT_NUMBER, LISTAGG(PRODUCT_COLORS, ',') WITHIN GROUP (ORDER BY PRODUCT_COLORS) AS PRODUCT_COLORS-->
<!--            FROM TBL_PRODUCT_COLOR-->
<!--            GROUP BY PRODUCT_NUMBER-->
<!--        ) PC ON P.PRODUCT_NUMBER = PC.PRODUCT_NUMBER-->
<!--        WHERE P.PRODUCT_NUMBER = #{productNumber}-->
<!--        GROUP BY P.PRODUCT_NUMBER, P.CATEGORY_MAJOR_CODE, P.CATEGORY_MINOR_CODE, P.PRODUCT_NAME, P.PRODUCT_PRICE,-->
<!--                 P.DISCOUNT_RATE, P.PRODUCT_EXPLANATION, P.PRODUCT_QUANTITY, P.PRODUCT_REGISTER_DATE,-->
<!--                 P.PRODUCT_EXPLANATION1, P.PRODUCT_EXPLANATION2, U.USER_NUMBER, U.USER_ID, F.FILE_UPLOAD_PATH,-->
<!--                 F.FILE_UUID, F.FILE_NAME, F.FILE_NUMBER, PS.PRODUCT_SIZES, PC.PRODUCT_COLORS-->
<!--    </select>-->
<!--    <select id="selectProduct" resultType="productVo">-->
<!--        SELECT-->
<!--            P.PRODUCT_NUMBER,-->
<!--            P.CATEGORY_MAJOR_CODE,-->
<!--            P.CATEGORY_MINOR_CODE,-->
<!--            P.PRODUCT_NAME,-->
<!--            P.PRODUCT_PRICE,-->
<!--            P.DISCOUNT_RATE,-->
<!--            (P.PRODUCT_PRICE * (1 - P.DISCOUNT_RATE / 100)) AS DISCOUNT_PRICE,-->
<!--            P.PRODUCT_EXPLANATION,-->
<!--            P.PRODUCT_QUANTITY,-->
<!--            P.PRODUCT_REGISTER_DATE,-->
<!--            P.PRODUCT_EXPLANATION1,-->
<!--            P.PRODUCT_EXPLANATION2,-->
<!--            PS.PRODUCT_SIZES,-->
<!--            PC.PRODUCT_COLORS,-->
<!--            U.USER_ID,-->
<!--            U.USER_NUMBER,-->
<!--            F.FILE_UPLOAD_PATH,-->
<!--            F.FILE_UUID,-->
<!--            F.FILE_NAME-->
<!--        FROM TBL_PRODUCT P-->
<!--                 JOIN TBL_USER U ON P.USER_NUMBER = U.USER_NUMBER-->
<!--                 JOIN TBL_FILE F ON F.PRODUCT_NUMBER = P.PRODUCT_NUMBER-->
<!--                JOIN TBL_PRODUCT_SIZE PS ON PS.PRODUCT_NUMBER=P.PRODUCT_NUMBER-->
<!--                JOIN TBL_PRODUCT_COLOR PC ON PC.PRODUCT_NUMBER=P.PRODUCT_NUMBER-->
<!--        WHERE P.PRODUCT_NUMBER = #{productNumber}-->
<!--    </select>-->

    <select id="classifyMajorMinor" resultType="productVo">
        SELECT P.PRODUCT_NUMBER, P.CATEGORY_MAJOR_CODE, P.CATEGORY_MINOR_CODE, P.PRODUCT_NAME, P.PRODUCT_PRICE,
        P.DISCOUNT_RATE, (P.PRODUCT_PRICE * (1 - (P.DISCOUNT_RATE/100))) AS DISCOUNT_PRICE,
        P.PRODUCT_EXPLANATION, P.PRODUCT_QUANTITY, P.PRODUCT_REGISTER_DATE, P.PRODUCT_EXPLANATION1, P.PRODUCT_EXPLANATION2,
        LISTAGG(PS.PRODUCT_SIZES, ',') WITHIN GROUP (ORDER BY PS.PRODUCT_SIZES) AS PRODUCT_SIZES,
        LISTAGG(PC.PRODUCT_COLORS, ',') WITHIN GROUP (ORDER BY PC.PRODUCT_COLORS) AS PRODUCT_COLORS,
        U.USER_NUMBER, U.USER_ID,
        F.FILE_UPLOAD_PATH, F.FILE_UUID, F.FILE_NAME, F.FILE_NUMBER
        FROM TBL_USER U
        JOIN TBL_PRODUCT P ON U.USER_NUMBER = P.USER_NUMBER
        JOIN (
        SELECT
        PRODUCT_NUMBER,
        LISTAGG(PRODUCT_SIZES, ',') WITHIN GROUP (ORDER BY PRODUCT_SIZES) AS PRODUCT_SIZES
        FROM  TBL_PRODUCT_SIZE
        GROUP BY PRODUCT_NUMBER
        ) PS ON P.PRODUCT_NUMBER = PS.PRODUCT_NUMBER
        JOIN (
        SELECT
        PRODUCT_NUMBER,
        LISTAGG(PRODUCT_COLORS, ',') WITHIN GROUP (ORDER BY PRODUCT_COLORS) AS PRODUCT_COLORS
        FROM
        TBL_PRODUCT_COLOR
        GROUP BY
        PRODUCT_NUMBER
        ) PC ON P.PRODUCT_NUMBER = PC.PRODUCT_NUMBER
        LEFT JOIN (
        SELECT FILE_NUMBER, FILE_UPLOAD_PATH, FILE_UUID, FILE_NAME, PRODUCT_NUMBER
        FROM (
        SELECT FILE_NUMBER, FILE_UPLOAD_PATH, FILE_UUID, FILE_NAME, PRODUCT_NUMBER,
        RANK() OVER(PARTITION BY PRODUCT_NUMBER ORDER BY FILE_NUMBER) RK
        FROM TBL_FILE
        )
        WHERE RK = 1
        ) F ON P.PRODUCT_NUMBER = F.PRODUCT_NUMBER
        WHERE P.CATEGORY_MAJOR_CODE = #{categoryMajorCode}
        <if test="categoryMinorCode != null">
            AND P.CATEGORY_MINOR_CODE = #{categoryMinorCode}
        </if>
        GROUP BY P.PRODUCT_NUMBER, P.CATEGORY_MAJOR_CODE, P.CATEGORY_MINOR_CODE, P.PRODUCT_NAME, P.PRODUCT_PRICE,
        P.DISCOUNT_RATE, (P.PRODUCT_PRICE * (1 - P.DISCOUNT_RATE)), P.PRODUCT_EXPLANATION, P.PRODUCT_QUANTITY,
        P.PRODUCT_REGISTER_DATE, P.PRODUCT_EXPLANATION1, P.PRODUCT_EXPLANATION2,
        U.USER_NUMBER, U.USER_ID,
        F.FILE_UPLOAD_PATH, F.FILE_UUID, F.FILE_NAME, F.FILE_NUMBER
        ORDER BY P.PRODUCT_NUMBER DESC
    </select>


    <select id="selectAllProduct" resultType="productVo">
        SELECT P.PRODUCT_NUMBER, P.CATEGORY_MAJOR_CODE, P.CATEGORY_MINOR_CODE, P.PRODUCT_NAME, P.PRODUCT_PRICE,
               P.DISCOUNT_RATE, (P.PRODUCT_PRICE * (1 - (P.DISCOUNT_RATE/100))) AS DISCOUNT_PRICE,
               P.PRODUCT_EXPLANATION, P.PRODUCT_QUANTITY,
               LISTAGG(PS.PRODUCT_SIZES, ',') WITHIN GROUP (ORDER BY PS.PRODUCT_SIZES) AS PRODUCT_SIZES,
       LISTAGG(PC.PRODUCT_COLORS, ',') WITHIN GROUP (ORDER BY PC.PRODUCT_COLORS) AS PRODUCT_COLORS,
            P.PRODUCT_REGISTER_DATE, P.PRODUCT_EXPLANATION1, P.PRODUCT_EXPLANATION2,
            U.USER_NUMBER, U.USER_ID,
            F.FILE_UPLOAD_PATH, F.FILE_UUID, F.FILE_NAME, F.FILE_NUMBER
        FROM TBL_USER U
            JOIN TBL_PRODUCT P ON U.USER_NUMBER = P.USER_NUMBER
            JOIN (
            SELECT
            PRODUCT_NUMBER,
            LISTAGG(PRODUCT_SIZES, ',') WITHIN GROUP (ORDER BY PRODUCT_SIZES) AS PRODUCT_SIZES
            FROM  TBL_PRODUCT_SIZE
            GROUP BY PRODUCT_NUMBER
            ) PS ON P.PRODUCT_NUMBER = PS.PRODUCT_NUMBER
            JOIN (
            SELECT
            PRODUCT_NUMBER,
            LISTAGG(PRODUCT_COLORS, ',') WITHIN GROUP (ORDER BY PRODUCT_COLORS) AS PRODUCT_COLORS
            FROM
            TBL_PRODUCT_COLOR
            GROUP BY
            PRODUCT_NUMBER
            ) PC ON P.PRODUCT_NUMBER = PC.PRODUCT_NUMBER
            LEFT JOIN (
            SELECT FILE_NUMBER, FILE_UPLOAD_PATH, FILE_UUID, FILE_NAME, PRODUCT_NUMBER
            FROM (
            SELECT FILE_NUMBER, FILE_UPLOAD_PATH, FILE_UUID, FILE_NAME, PRODUCT_NUMBER,
            RANK() OVER(PARTITION BY PRODUCT_NUMBER ORDER BY FILE_NUMBER) RK
            FROM TBL_FILE
            )
            WHERE RK = 1
            ) F ON P.PRODUCT_NUMBER = F.PRODUCT_NUMBER
        GROUP BY P.PRODUCT_NUMBER, P.CATEGORY_MAJOR_CODE, P.CATEGORY_MINOR_CODE, P.PRODUCT_NAME, P.PRODUCT_PRICE,
            P.DISCOUNT_RATE, (P.PRODUCT_PRICE * (1 - P.DISCOUNT_RATE)), P.PRODUCT_EXPLANATION, P.PRODUCT_QUANTITY,
            P.PRODUCT_REGISTER_DATE, P.PRODUCT_EXPLANATION1, P.PRODUCT_EXPLANATION2,
            U.USER_NUMBER, U.USER_ID,
            F.FILE_UPLOAD_PATH, F.FILE_UUID, F.FILE_NAME, F.FILE_NUMBER
        ORDER BY P.PRODUCT_NUMBER DESC
    </select>




    <delete id="delete">
        DELETE FROM TBL_PRODUCT
        WHERE PRODUCT_NUMBER = #{productNumber}
    </delete>


    <delete id="sizeDelete">
        DELETE from TBL_PRODUCT_SIZE
        WHERE PRODUCT_NUMBER = #{productNumber}
    </delete>

    <delete id="colorDelete">
        DELETE from TBL_PRODUCT_COLOR
        WHERE PRODUCT_NUMBER = #{productNumber}
    </delete>

    <update id="updateProduct">
    UPDATE TBL_PRODUCT
    SET  PRODUCT_NAME=#{productName}, PRODUCT_COLOR=#{productColor}, PRODUCT_PRICE=#{productPrice},
         PRODUCT_EXPLANATION=#{productExplanation},PRODUCT_EXPLANATION1=#{productExplanation1}
        ,PRODUCT_EXPLANATION2=#{productExplanation2}, PRODUCT_QUANTITY=#{productQuantity}, PRODUCT_SIZE=#{productSize}
        ,DISCOUNT_RATE=#{discountRate}
        WHERE PRODUCT_NUMBER=#{productNumber}
    </update>


    <select id="selectTotal" resultType="int">
        SELECT COUNT(PRODUCT_NUMBER) FROM TBL_PRODUCT
    </select>



</mapper>


