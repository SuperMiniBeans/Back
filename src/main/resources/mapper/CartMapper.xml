<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.go.together.Mapper.CartMapper">


<!--&lt;!&ndash;    &lt;!&ndash;장바구니 상품추가 &ndash;&gt;&ndash;&gt;-->
    <insert id="insertCart" >
        <selectKey keyProperty="cartNumber" order="BEFORE" resultType="int">
            SELECT SEQ_CART.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_CART(CART_NUMBER, PRODUCT_NUMBER, USER_NUMBER, CART_COUNT, SELECTED_SIZE, SELECTED_COLOR)
        VALUES (#{cartNumber}, #{productNumber}, #{userNumber}, #{cartCount}, #{selectedSize}, #{selectedColor})
    </insert>




    <!--    장바구니 상품 조회-->
    <select id="userCartList" resultType="cartVo">
        SELECT C.CART_NUMBER, C.CART_COUNT, C.SELECTED_COLOR, C.SELECTED_SIZE,
               U.USER_NUMBER, U.USER_ID, U.USER_ADDRESS1, U.USER_ADDRESS2, U.USER_ADDRESS3, U.USER_PHONE_NUMBER,
               P.PRODUCT_NUMBER, P.PRODUCT_NAME, P.PRODUCT_QUANTITY, P.PRODUCT_PRICE, P.DISCOUNT_RATE,
               LISTAGG(PS.PRODUCT_SIZES, ',') WITHIN GROUP (ORDER BY PS.PRODUCT_SIZES) AS PRODUCT_SIZES,
       LISTAGG(PC.PRODUCT_COLORS, ',') WITHIN GROUP (ORDER BY PC.PRODUCT_COLORS) AS PRODUCT_COLORS,
            (P.PRODUCT_PRICE * (1 - (P.DISCOUNT_RATE/100))) AS DISCOUNT_PRICE,
             C.CART_COUNT AS TOTAL_COUNT,
            P.PRODUCT_PRICE * C.CART_COUNT AS TOTAL_PRICE,
            F.FILE_NAME, F.FILE_UPLOAD_PATH, F.FILE_UUID
        FROM TBL_USER U
            JOIN TBL_CART C ON U.USER_NUMBER = C.USER_NUMBER
            JOIN TBL_PRODUCT P ON P.PRODUCT_NUMBER = C.PRODUCT_NUMBER
            JOIN (
            SELECT
            PRODUCT_NUMBER,
            LISTAGG(PRODUCT_SIZES, ',') WITHIN GROUP (ORDER BY PRODUCT_SIZES) AS PRODUCT_SIZES
            FROM  TBL_PRODUCT_SIZE
            GROUP BY PRODUCT_NUMBER
            ) PS ON P.PRODUCT_NUMBER = PS.PRODUCT_NUMBER
            JOIN (
            SELECT
            PRODUCT_NUMBER,
            LISTAGG(PRODUCT_COLORS, ',') WITHIN GROUP (ORDER BY PRODUCT_COLORS) AS PRODUCT_COLORS
            FROM
            TBL_PRODUCT_COLOR
            GROUP BY
            PRODUCT_NUMBER
            ) PC ON P.PRODUCT_NUMBER = PC.PRODUCT_NUMBER
            LEFT JOIN (
            SELECT FILE_NUMBER, FILE_UPLOAD_PATH, FILE_UUID, FILE_NAME, PRODUCT_NUMBER
            FROM (
            SELECT FILE_NUMBER, FILE_UPLOAD_PATH, FILE_UUID, FILE_NAME, PRODUCT_NUMBER,
            RANK() OVER (PARTITION BY PRODUCT_NUMBER ORDER BY FILE_NUMBER) RK
            FROM TBL_FILE
            ) T
            WHERE RK = 1
            ) F ON F.PRODUCT_NUMBER = P.PRODUCT_NUMBER
        WHERE C.USER_NUMBER = #{userNumber}
        GROUP BY
            C.CART_NUMBER, C.CART_COUNT, C.SELECTED_COLOR, C.SELECTED_SIZE,
            U.USER_NUMBER, U.USER_ID, U.USER_ADDRESS1, U.USER_ADDRESS2, U.USER_ADDRESS3, U.USER_PHONE_NUMBER,
            P.PRODUCT_NUMBER, P.PRODUCT_NAME, P.PRODUCT_QUANTITY, P.PRODUCT_PRICE, P.DISCOUNT_RATE,
            F.FILE_NAME, F.FILE_UPLOAD_PATH, F.FILE_UUID
    </select>









    <!--    장바구지 상품 수량 추가-->
    <update id="addCart">
        UPDATE TBL_CART
        SET CART_COUNT = CART_COUNT + #{cartCount}
        WHERE CART_NUMBER = #{cartNumber}
    </update>


    <!--장바구니 상품 수량 감소-->
    <update id="minusCart">
        UPDATE TBL_CART
        SET CART_COUNT = #{cartCount} - CART_COUNT
        WHERE CART_NUMBER = #{cartNumber}
    </update>


    <!--    특정 회원, 특정 상품의 카트 번호 조회-->
    <select id="selectCartNumber" resultType="Long">
        SELECT CART_NUMBER
        FROM TBL_CART
        WHERE USER_NUMBER=#{userNumber} AND PRODUCT_NUMBER=#{productNumber}
    </select>




    <!--    장바구니 상품 수량 변경-->
    <update id="changeCartCount">
        UPDATE TBL_CART
        SET CART_COUNT = #{cartCount}
        WHERE CART_NUMBER = #{cartNumber}
    </update>


    <update id="changeColor">
        UPDATE TBL_CART
        SET SELECTED_SIZE = #{selectedSize}
        WHERE CART_NUMBER = #{cartNumber}
    </update>
    <update id="changeSize">
        UPDATE TBL_CART
        SET SELECTED_COLOR = #{selectedColor}
        WHERE CART_NUMBER = #{cartNumber}
    </update>



    <update id="changeSizeColor">
        UPDATE TBL_CART
        <set>
            <if test="selectedColor != null">
                SELECTED_COLOR = #{selectedColor},
            </if>
            <if test="selectedSize != null">
                SELECTED_SIZE = #{selectedSize},
            </if>
        </set>
        WHERE CART_NUMBER = #{cartNumber}
    </update>




<select id="cartUserNumberTotalPrice">
    SELECT U.USER_NUMBER,
           SUM(P.PRODUCT_PRICE * C.CART_COUNT) AS TOTAL_PRICE,
           SUM(P.PRODUCT_PRICE*(1-(P.DISCOUNT_RATE/100)))*C.CART_COUNT AS TOTAL_DISCOUNT_PRICE
    FROM TBL_USER U
             JOIN TBL_CART C ON U.USER_NUMBER = C.USER_NUMBER
             JOIN TBL_PRODUCT P ON P.PRODUCT_NUMBER = C.PRODUCT_NUMBER
    WHERE C.USER_NUMBER =#{userNumber}
    GROUP BY U.USER_NUMBER,C.CART_COUNT
</select>


    <!--    장바구니 상품 삭제-->
    <delete id="deleteCart">
        DELETE
        FROM TBL_CART
        WHERE CART_NUMBER = #{cartNumber}
    </delete>







    <select id="selectOrderCart" resultType="cartVo">
        SELECT C.CART_NUMBER, C.CART_COUNT, C.SELECTED_COLOR, C.SELECTED_SIZE,
               U.USER_NUMBER,
               P.PRODUCT_NUMBER, P.PRODUCT_NAME,P.PRODUCT_PRICE,P.DISCOUNT_RATE,
               (P.PRODUCT_PRICE * (1 - (P.DISCOUNT_RATE/100))) AS DISCOUNT_PRICE,
               C.CART_COUNT AS TOTAL_COUNT,
               (P.PRODUCT_PRICE * (1 - (P.DISCOUNT_RATE/100)) * C.CART_COUNT) AS DISCOUNT_TOTAL_PRICE,
               P.PRODUCT_PRICE * C.CART_COUNT AS TOTAL_PRICE,
               F.FILE_NAME, F.FILE_UPLOAD_PATH, F.FILE_UUID
        FROM TBL_CART C
                 JOIN TBL_USER U ON C.USER_NUMBER = U.USER_NUMBER
                 JOIN TBL_PRODUCT P ON P.PRODUCT_NUMBER=C.PRODUCT_NUMBER
                 LEFT JOIN (
            SELECT FILE_NUMBER, FILE_UPLOAD_PATH, FILE_UUID, FILE_NAME, PRODUCT_NUMBER
            FROM (
                     SELECT FILE_NUMBER, FILE_UPLOAD_PATH, FILE_UUID, FILE_NAME, PRODUCT_NUMBER,
                            RANK() OVER(PARTITION BY PRODUCT_NUMBER ORDER BY FILE_NUMBER) RK
                     FROM TBL_FILE
                 ) T
            WHERE RK = 1
        ) F ON F.PRODUCT_NUMBER = P.PRODUCT_NUMBER
        WHERE C.CART_NUMBER = #{cartNumber}
    </select>





</mapper>


